name: CI/CD for Calendar Service

on:
  push:
    branches: [ "main" ]
    paths:
      - "calendar/**"
      - ".github/workflows/calendar-ci.yml"
      - "nomad/calendar.hcl"
      - "docker/Dockerfile.stage"

env:
  IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
  DOCKER_IMAGE: friendy21/calendar-service
  SERVICE_NAME: calendar-service
  SERVICE_PORT: 5002

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./calendar
        file: ./docker/Dockerfile.stage
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ env.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Nomad
      run: |
        # Remove any existing nomad binary first
        sudo rm -f /usr/local/bin/nomad
        
        # Download and install Nomad with -o flag to force overwrite
        curl -fsSL -o nomad.zip https://releases.hashicorp.com/nomad/1.8.3/nomad_1.8.3_linux_amd64.zip
        unzip -o nomad.zip
        sudo mv nomad /usr/local/bin/
        rm -f nomad.zip LICENSE.txt
        
        # Verify installation
        nomad version

    - name: Deploy to Nomad
      env:
        NOMAD_ADDR: ${{ secrets.NOMAD_ADDR }}
        NOMAD_TOKEN: ${{ secrets.NOMAD_TOKEN }}
      run: |
        # Replace placeholders
        sed -i "s|IMAGE_TAG_PLACEHOLDER|${{ env.IMAGE_TAG }}|g" nomad/calendar.hcl
        sed -i "s|DOCKER_IMAGE_PLACEHOLDER|${{ env.DOCKER_IMAGE }}|g" nomad/calendar.hcl
        
        # Validate job
        if ! nomad job validate nomad/calendar.hcl; then
          echo "‚ùå Job validation failed"
          cat nomad/calendar.hcl
          exit 1
        fi
        
        # Run the job
        echo "üöÄ Deploying calendar-service..."
        nomad job run nomad/calendar.hcl
        
        # Wait for deployment
        echo "‚è≥ Waiting for deployment..."
        MAX_ATTEMPTS=30
        ATTEMPT=0
        
        while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
          STATUS=$(nomad job status calendar-service 2>/dev/null | grep "^Status" | awk '{print $3}' || echo "pending")
          echo "Status check $((ATTEMPT + 1))/$MAX_ATTEMPTS: $STATUS"
          
          if [ "$STATUS" = "running" ]; then
            echo "‚úÖ Calendar service is running!"
            nomad job status calendar-service
            exit 0
          elif [ "$STATUS" = "dead" ] || [ "$STATUS" = "failed" ]; then
            echo "‚ùå Deployment failed with status: $STATUS"
            nomad job status calendar-service
            exit 1
          fi
          
          sleep 10
          ATTEMPT=$((ATTEMPT + 1))
        done
        
        echo "‚ùå Deployment timed out after $((MAX_ATTEMPTS * 10)) seconds"
        nomad job status calendar-service || true
        exit 1
